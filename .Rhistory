print(TDCorder)
source('~/Tietgen/10.5/TDC_fall2016.R', echo=TRUE)
rm(list=ls())
source('~/Tietgen/10.5/TDC_fall2016.R', echo=TRUE)
log(2^19937)
199937*log(2)
199936*log(10)
100000*log(10)
199937*log(2)
60000*log(10)
source('~/Tietgen/10.5/TDC_fall2016.R', echo=TRUE)
u <- 20
lambda <- 1/2
c <- theta <- 1
n <- 1e4
a <- list(a=c(1,2,NA),b = c(0,1,1,NA))
sapply(a,mean,na.rm = TRUE)
"B")), class = c("xts", "zoo"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tt<-apply.daily(tt2, function(x) sapply(x,mean,na.rm=TRUE))
library(xts)
tt<-apply.daily(tt2, function(x) sapply(x,mean,na.rm=TRUE))
tt
plot(tt)
str(tt)
apply.daily(tt2,mean,na.rm=TRUE)
apply.daily(tt2,mean,na.rm=TRUE)
tt<-apply.daily(tt2, function(x) sapply(x,mean,na.rm=TRUE))
apply.daily(tt2, function(x) sapply(x,mean,na.rm=TRUE))
apply.daily(tt2,mean,na.rm=TRUE)
endpoints(tt2)
period.sum(tt2)
period.sum(tt2,INDEX = endpoints(tt2))
sapply(tt2, period.sum,,INDEX = endpoints(tt2))
sapply(tt2, period.sum,INDEX = endpoints(tt2))
str(tt2)
tt2
col(tt2)
tt<-apply.daily(tt2, function(x) sapply(x,period.sum))
tt<-apply.daily(tt2, function(x) sapply(x,period.sum, INDEX = endpoints(tt2)))
tt<-apply.daily(tt2, function(x) sapply(x,period.sum, INDEX = endpoints(x)))
period.apply(tt2,endpoints(tt2),period.sum)
str(tt2)
sapply(tt2,function(col) col+100)
lapply(tt2,function(col) col+100)
tt2
col(tt2)
colnames(tt2)
tt2[["A"]]
tt2["A"]
tt2[,"A"]
sapply(colnames(tt2), function(col) period.sum(tt2[[,"col"]],...),
INDEX = endpoints(tt2[[,col]])
)
tt2["A"]
tt2[["A"]
]
str(tt2)
sapply(colnames(tt2), function(col) period.sum(tt2[,"col"],...),
INDEX = endpoints(tt2[,col])
)
sapply(colnames(tt2), function(col) period.sum(tt2[,"col"],INDEX = endpoints(tt2[,col])))
sapply(colnames(tt2), function(col) period.sum(tt2[,col],INDEX = endpoints(tt2[,col])))
endpoints(tt2)
endpoints(tt2[,"A"])
period.sum(tt2[,"A"],endpoints(tt2))
period.sum(tt2[,"B"],endpoints(tt2))
sapply(tt2,sum,na.rm=TRUE)
period.apply(tt2,endpoints(tt2),sum,na.rm=TRUE)
period.apply(tt2,endpoints(tt2),colSums,na.rm=TRUE)
lapply(tt2,colSums,na.rm=TRUE)
apply.daily(tt2,colSums,na.rm=TRUE)
data.frame(COL1 = c(10,10,10,20,20,30,30), COL2 = c("text1","text2","text1","text1","text6","text7","text7"))
data.frame(COL1 = c(10,10,10,20,20,30,30), COL2 = c("text1","text2","text1 text2 text3","text1 text2","text6","text7 text8","text7 text8 text9"))
a<-data.frame(COL1 = c(10,10,10,20,20,30,30), COL2 = c("text1","text2","text1 text2 text3","text1 text2","text6","text7 a text8","text7 text8 text9"))
a<-data.frame(COL1 = c(10,10,10,20,20,30,30),
COL2 = c("text1","text2","text1 text2 text3",
"text1 text2","text6","text7 a text8",
"text7 text8 text9"))
a
lapply(a)
lapply(a,paste)
lapply(a[["COL1"]],paste)
unique(A[["COL1"]])
unique(a[["COL1"]])
sapply(a,paste)
lapply(a,paste)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(COL2 ~ COL1, data = a)
aggregate(COL2 ~ COL1, data = a,paste)
aggregate(COL2 ~ COL1, data = a,paste)
aggregate(COL2 ~ COL1, data = a,c)
aggregate(COL2 ~ COL1, data = a,cat)
aggregate(COL2 ~ COL1, data = a,paste)
aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
aggregate(COL2 ~ COL1, data = a,paste0,collapse = " ")
aggregate(COL2 ~ COL1, data = a,paste0)
aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b[["COL2"]]
strsplit(b[["COL2"]])
strsplit(b[["COL2"]]," ")
b2 <- b[["COL2"]]
strsplit(b2," ")
unique(b2)
b3 <- strsplit(b2," ")
unique(b3)
b3 <- strsplit(b2," ");b3
lapply(b3,unique)
a<-data.frame(COL1 = c(10,10,10,20,20,30,30),
COL2 = c("text1","text2","text1 text2 text3",
"text1 text2","text6","text7 text8",
"text7 text8 text9"))
a
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b3 <- strsplit(b2," ")
b3
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b3 <- strsplit(b2," ")
b3
b3 <- strsplit(b[["COL2"]]," ")
b3
b2 <- strsplit(b[["COL2"]]," ")
b2
b[["COL2"] <- lapply(b3,unique)
lapply(b3,unique)
sapply(b2,unique)
lapply(b2,unique)
b2
strsplit(b[["COL2"]]," ")
b2 <- as.vector(strsplit(b[["COL2"]]," "))
b2
b2 <- unlist(strsplit(b[["COL2"]]," "))
b2
b2 <- strsplit(b[["COL2"]]," ")
b2
b[["COL2"] <- unlist(lapply(b2,unique))
b[["COL2"]] <- unlist(lapply(b2,unique))
b
unlist(lapply(b2,unique))
b[["COL2"]] <- lapply(b2,unique)
lapply(b2,unique)
b[["COL2"]] <- paste0(lapply(b2,unique))
b
b[["COL2"]] <- paste(lapply(b2,unique))
b
b2
lapply(b2,unique)
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b2
b[["COL2"]] <- lapply(b2,unique)
b
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
lapply(b2,unique)
b
b[["COL2"]] <- lapply(b2,unique)
b
b2
b[["COL2"]] <- d <- lapply(b2,unique,)
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b[["COL2"]] <- d <- lapply(b2,unique)
d
paste(d)
sapply(d,paste)
sapply(d,paste0)
lapply(d,paste0)
lapply(d,paste)
str(d)
lapply(d,cat)
cat(d)
sapply(d,cat)
lapply(d,cat)
lapply(d,paste,collapse)
lapply(d,paste,collapse=TRUE)
lapply(d,paste,collapse=" ")
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b[["COL2"]] <- d <- lapply(b2,unique)
lapply(d,paste,collapse=" ")
b[["COL2"]] <- d <- paste(lapply(b2,unique),collapse = " ")
d
d <- lapply(b2,unique)
d
b3
b2 <- strsplit(b[["COL2"]]," ")
b2
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b3
b[["COL2"]] <- lapply(b3,paste,collapse=" ")
b
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b3 <- lapply(b2,unique)
b3
b[["COL2"]] <- lapply(b3,paste,collapse=" ")
b
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b3 <- lapply(b2,unique)
b3
want <- b[[1]]
want
b[["COL2"]] <- lapply(b3,paste,collapse=" ")
b
sum(NA)
xts(c(1,2,3))
xts(c(1,2,3),order.by = "2016-2018")
xts(c(1,2,3),order.by = "2016")
tt2
tt2[1]
tt2[2]
period.sum(tt2[1])
tt2[c(1,3)]
tt2[c(1,4)]
tt2[c(1,5)]
tt2[c(1,6)]
period.sum(tt2[c(1,6)])
lapply(tt2[c(1,6)],period.sum)
lapply(tt2[c(1,6)],period.sum,INDEX = endpoints(tt2[c(1,6)]))
b[["COL2"]] <- lapply(b3,paste,collapse=", ")
b
value("asd")
sapply(c(1,2),mean,na.rm=TRUE,test)
sapply(c(1,2),mean,na.rm=TRUE,test=1)
apply.daily(tt2,colSums,na.rm= TRUE)
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = ", ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b3 <- lapply(b2,unique)
b3
b[["COL2"]] <- lapply(b3,paste,collapse=", ")
b
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = ", ")
b
b2 <- strsplit(b[["COL2"]]," ")
b2
b3 <- lapply(b2,gsub)
b3
b2
b2[1]
b2[[1]]
pmatch(b2[[1]])
pmatch(b2[[1]],b2[[1]])
b2 <- strsplit(b[["COL2"]]," ")
b2[[1]]
paste(b2[[1]],collapse = " ")
d <- paste(b2[[1]],collapse = " ")
pmatch(b2[[1]],d)
asd <- Vectorize(pmatch,"x")
pmatch(b2[[1]],d)
asd(b2[[1]],d)
b2[[1]]
d
b2[[1]]
b2 <- strsplit(b[["COL2"]]," ")
b2[[1]]
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = ", ")
b
b <- aggregate(COL2 ~ COL1, data = a,paste)
b
b <- aggregate(COL2 ~ COL1, data = a,paste)
b
b2 <- strsplit(b[["COL2"]]," ")
b[["COL2"]]
b2 <- strsplit(b[["COL2"]][1]," ")
b[["COL2"]][[1]]
b2 <- strsplit(b[["COL2"]][[1]]," ")
b2[[1]]
b2
b <- aggregate(COL2 ~ COL1, data = a,paste)
b
b[["COL2"]]
b <- aggregate(COL2 ~ COL1, data = a,paste)
b[["COL2"]]
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = ", ")
b[["COL2"]]
b2 <- strsplit(b[["COL2"]][[1]]," ")
b2
grep("text1",b2)
grepl("text1",b2)
match("text1",b2)
pmatch("text1",b2)
grep("text1",b2)
grep("text",b2)
grep("text2",b2)
b2
grep("text2",b2[[1]])
grep("text1",b2[[1]])
grep(b2[[1]],b2[[1]])
sapply(b2[[1]], grep, x = b2[[1]])
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b[["COL2"]]
b[["COL2"]]
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = " ")
b[["COL2"]]
cbind(b[["COL2"]])
b <- aggregate(COL2 ~ COL1, data = a,paste,collapse = ", ")
cbind(b[["COL2"]])
strsplit(b[["COL2"]],split = ",")
b <- aggregate(COL2 ~ COL1, data = a,paste)
cbind(b[["COL2"]])
b[["COL2"]]
b
strsplit(b[["COL2"]],split = ",")
b <- aggregate(COL2 ~ COL1, data = a,paste)
b[["COL2"]]
b
b[["COL2"]][[1]]
sapply(gsub(b[["COL2"]][[1]],"",b[["COL2"]][[1]]))
sapply(b[["COL2"]][[1]], gsub, replacement = "",x = b[["COL2"]][[1]])
tt2
split(tt2,"months")
split(tt2,"days")
split(tt2,"hours",k = 12)
date(tt2)
a <- data.frame(COL1 = c(10,10,10,20,20,30,30),
COL2 = c("mary has life","don mary has life","britto mary has life",
"push them","push them fur","yell at this",
"yell at this, this is"))
a
a <- data.frame(COL1 = c(10,10,10,20,20,30,30),
COL2 = c("mary has life","don mary has life","britto mary has life",
"push them","push them fur","yell at this",
"yell at this, this is"))
a
b <- aggregate(COL2 ~ COL1, data = a,paste)
b[["COL2"]]
b
b[["COL2"]][[1]]
b <- aggregate(COL2 ~ COL1, data = a,paste)
b
b[["COL2"]][which(b[["COL1"]] == 10)]
b[["COL2"]][which(b[["COL1"]] == 10)]
asd <- b[["COL2"]][which(b[["COL1"]] == 10)]
asd <- b[["COL2"]][which(b[["COL1"]] == 10)][[1]]
asd
gsub(asd[1],"",asd[-1])
gsub(asd[i],"",asd[-i])
for(i in seq_len(asd)){
gsub(asd[i],"",asd[-i])
}
asd <- b[["COL2"]][which(b[["COL1"]] == 10)][[1]]
asd
for(i in seq_len(asd)){
gsub(asd[i],"",asd[-i])
}
asd[-2]
asd[2]
gsub(asd[2],"",asd[-2])
gsub(asd[3],"",asd[-3])
for(i in seq_len(asd)){
i#gsub(asd[i],"",asd[-i])
}
seq_len(asd)
length(asd)
seq_len(3)
for(i in seq_len(length(asd))){
gsub(asd[i],"",asd[-i])
}
out <- c()
for(i in seq_len(length(asd))){
out[i] <-gsub(asd[i],"",asd[-i])
}
out <- list()
for(i in seq_len(length(asd))){
out[[i]] <-gsub(asd[i],"",asd[-i])
}
out
asd <- b[["COL2"]][which(b[["COL1"]] == 10)][[1]]
asd
for(i in seq_len(length(asd))){
asd <-gsub(asd[i],"",asd[-seq_len(i)])
}
asd
out <- gsub(asd[i],"",asd[-seq_len(i)])
for(i in seq_len(length(asd))){
out <- gsub(asd[i],"",asd[-seq_len(i)])
}
asd <- b[["COL2"]][which(b[["COL1"]] == 10)][[1]]
asd <- b[["COL2"]][which(b[["COL1"]] == 10)][[1]]
asd
asd[-seq_len(i)]
for(i in seq_len(length(asd))){
out <- gsub(asd[i],"",asd[-seq_len(i)])
}
asd <- b[["COL2"]][which(b[["COL1"]] == 10)][[1]]
asd[-seq_len(i)]
for(i in seq_len(length(asd)-1)){
out <- gsub(asd[i],"",asd[-seq_len(i)])
}
asd <- b[["COL2"]][which(b[["COL1"]] == 10)][[1]]
asd
out <- list()
for(i in seq_len(length(asd)-1)){
out[[i]] <- gsub(asd[i],"",asd[-seq_len(i)])
}
out
Article = c("A","A","A","A","B","B","B","C","C","C","C")
Value = c(1,5,2,1,20,18,5,6,3,31,99)
df = data.frame(Article, Value)
order(df)
df
df[order(df)]
df[,order(df)]
df[order(df),]
df[order(df$Value),]
df2 <- df[order(df$Value),]
lapply(df2,paste)
lapply(df2,paste,collapse = "_")
sapply(df2,paste,collapse = "_")
Article = c("A","A","A","A","B","B","B","C","C","C","C")
Value = c(1,5,2,1,20,18,5,6,3,31,99)
df = data.frame(Article, Value)
df2 <- df[order(df$Value),]
df2
setwd("~/1_Speciale/R")
source("Functions.R")
bachfire <- readRDS("~/Year4/blok4/BachSkade/brand_cleaned.rds")
skade <- with(bachfire,udg[udg>0])
sskade <- sort(skade,decreasing = TRUE)
par(mfrow = c(1,2))
barplot(skade,main = "Claim sizes")
hist(log(bachfire$udg),50)
par(mfrow = c(1,1))
evir::meplot(sskade,main = "Mean excess of Tryg fire data")
plot(sskade[1:(length(sskade)*0.01)],type = "l")
VGAM::meplot(log(sskade[sskade<exp(11) & sskade>0 ]))
qqplot(actuar::rpareto(1e5,10,1),
sskade[1:(length(sskade)*0.01)])
library("actuar")
library("fitdistrplus")
fitpar <- fitdist(skade[skade<1e5],distr = "pareto")
fitlg <- fitdist(skade[skade < 1e5],distr = "lgamma",start = c(1,1))
# fitexp <- fitdist(log(skade)/log(min(skade)), distr = "exp")
fitgam <- fitdist(log(skade[skade < 1e5]), distr = "gamma")
fitln <- fitdist(skade[skade<1e5],distr = "lnorm")
plot(fitpar)
plot(fitlg)
plot(fitgam)
plot(fitln)
par <- c(shapelog = 34.89786, ratelog = 3.11133)
n <- 1e5 ## Simulation length
m <- 8   ## Number of simulation paths
lgamsim <- lapply(rep(n,m),actuar::rlgamma,
shapelog = par[1], ratelog = par[2])
skade
qqplot(qlgamma(ppoints(500),par[1],par[2]),skade)
qqplot(qgamma(ppoints(500),par[1],par[2]),log(skade))
qqline(skade,distribution = function(p)qlgamma(p,par[1],par[2]))
qqplot(qlgamma(ppoints(500),par[1],par[2]),skade)
qqline(skade,distribution = function(p)qlgamma(p,par[1],par[2]))
qqline(log(skade),distribution = function(p)qlgamma(p,par[1],par[2]))
qqplot(qgamma(ppoints(500),par[1],par[2]),log(skade))
qqline(log(skade),distribution = function(p)qlgamma(p,par[1],par[2]))
qqline(log(skade),distribution = function(p)qgamma(p,par[1],par[2]))
par(mfrow = c(2,1))
qqplot(qlgamma(ppoints(500),par[1],par[2]),skade)
qqline(skade,distribution = function(p)qlgamma(p,par[1],par[2]))
qqplot(qgamma(ppoints(500),par[1],par[2]),log(skade))
qqline(log(skade),distribution = function(p)qgamma(p,par[1],par[2]))
par(mfrow = c(1,2))
qqplot(qlgamma(ppoints(500),par[1],par[2]),skade)
qqline(skade,distribution = function(p)qlgamma(p,par[1],par[2]))
qqplot(qgamma(ppoints(500),par[1],par[2]),log(skade))
qqline(log(skade),distribution = function(p)qgamma(p,par[1],par[2]))
par(mfrow = c(1,1))
qqplot(rnorm(1e5),rexp(1e4))
qqplot(exp(rnorm(1e5)),rexp(1e4))
qqplot(rnorm(1e5),log(rexp(1e4)))
qqplot(sqrt(log(rnorm(1e4))),log(rexp(1e4)))
optim(0.5,function(p) (qbinom(18,20,p,lower.tail = FALSE) -0.9)^2)
optim(0.9,function(p) (qbinom(18,20,p,lower.tail = FALSE) -0.9)^2)
optim(0.9,function(p) (qbinom(0.9,20,p,lower.tail = FALSE) -0.9)^2)
optim(0.9,function(p) (pbinom(0.9,20,p,lower.tail = FALSE) -0.9)^2)
optim(0.9,function(p) (pbinom(18,20,p,lower.tail = FALSE) -0.9)^2)
1-pbinom(18,20,0.97308)
1-pbinom(18,20,0.9730811)
1-pbinom(17,20,0.9730811)
optim(0.9,function(p) (pbinom(17,20,p,lower.tail = FALSE) -0.9)^2)
optim(0.9,function(p) (1-pbinom(17,20,p) -0.9)^2)
